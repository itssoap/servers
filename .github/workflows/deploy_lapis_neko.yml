name: Deploy Neko to Lapis

on:
  push:
    branches: [ main ]
    paths: 
      - 'lapis/neko/**'
      - '.github/workflows/deploy_lapis_neko.yml'
  workflow_dispatch:
    inputs:
      server:
        description: 'Server to deploy to'
        required: true
        default: 'lapis'
        type: choice
        options:
          - lapis

env:
  SERVER_NAME: lapis
  NODE_PORT: 8096
  REMOTE_PATH: "/home/${{ secrets.LAPIS_USER }}/Others/neko"
  K8S_DIR: "lapis/neko"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Tailscale
      uses: tailscale/github-action@v3
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
        tags: tag:ci

    - name: Copy manifests to remote server
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.LAPIS_HOST }}
        username: ${{ secrets.LAPIS_USER }}
        key: ${{ secrets.LAPIS_SSH_KEY }}
        source: "${{ env.K8S_DIR }}/*"
        target: "${{ env.REMOTE_PATH }}"

    - name: Apply and verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.LAPIS_HOST }}
        username: ${{ secrets.LAPIS_USER }}
        key: ${{ secrets.LAPIS_SSH_KEY }}
        script: |
          set -euo pipefail
          echo "[INFO] Switching to deployment directory"
          cd $REMOTE_PATH
          echo "[INFO] Applying Kubernetes manifests"
          kubectl apply -f .
          echo "[INFO] Verifying rollout of deployments"
          for deploy in $(kubectl get deploy -o jsonpath='{.items[*].metadata.name}'); do
            echo "[INFO] Checking rollout status for $deploy"
            kubectl rollout status deployment/$deploy --timeout=60s
          done
          echo "[INFO] Deployment successful"
   
    # - name: Setup kubeconfig
    #   env:
    #     LAPIS_KUBE_CONFIG: ${{ secrets.LAPIS_KUBE_CONFIG }}
    #     LAPIS_HOST: ${{ secrets.LAPIS_HOST }}
    #   run: |
    #     echo "$LAPIS_KUBE_CONFIG" | base64 -d > $HOME/.kube/config
    #     chmod 600 $HOME/.kube/config
    #     sed -i "s/127.0.0.1/$LAPIS_HOST/g" $HOME/.kube/config

    # - name: Test connection
    #   run: |
    #     kubectl cluster-info 
    #     kubectl get nodes

    # - name: Deploy to k3s
    #   run: |
    #     kubectl apply -f ${{ env.SERVER_NAME }}/neko/

    #     kubectl rollout status deployment/neko --timeout=300s
        
    #     echo "Deployment completed for ${{ env.SERVER_NAME }}"

    # - name: Get deployment status
    #   run: |
    #     echo "=== Pods ==="
    #     kubectl get pods -l app=neko -o wide
        
    #     echo "=== Services ==="
    #     kubectl get services -l app=neko
        
    #     echo "=== Ingress ==="
    #     kubectl get ingress
